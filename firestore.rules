
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Products are publicly readable, but only admins can write.
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    // Users can only read and write their own data.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Orders can only be read by the user who created them or an admin.
    // Users can create their own orders. Admins can manage all orders.
    match /orders/{orderId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN');
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && get(/databases/_REQUESTED_DATABASE_/documents/users/$(request.auth.uid)).data.role == 'ADMIN';

      // Rules for order items subcollection
       match /items/{itemId} {
         allow read: if request.auth != null && (get(/databases/$(database)/documents/orders/$(orderId)).data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN');
         allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
       }
    }
  }
}
