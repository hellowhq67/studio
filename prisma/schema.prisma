// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  firebaseUid String   @unique
  email       String   @unique
  name        String
  role        Role     @default(CUSTOMER)
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  CUSTOMER
  ADMIN
}

model Product {
  id              String       @id @default(cuid())
  name            String
  description     String
  longDescription String
  price           Float
  salePrice       Float?
  specialPrice    Float?
  couponCode      String?
  deliveryCharge  Float?       @default(0)
  quantity        Int?         @default(0)
  deliveryTime    String
  category        Category
  brand           String
  images          String[]
  tags            String[]
  rating          Float        @default(0)
  reviewCount     Int          @default(0)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  orderItems      OrderItem[]
}

enum Category {
  Skincare
  Makeup
  Haircare
  Fragrance
}

model Order {
  id              String      @id @default(cuid())
  userId          String
  user            User        @relation(fields: [userId], references: [id])
  items           OrderItem[]
  total           Float
  status          String // Processing, Paid, Failed, etc.
  transactionId   String?     @unique
  shippingAddress Json
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
}