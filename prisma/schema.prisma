datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  name          String?
  role          String    @default("CUSTOMER")
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  provider          String
  providerAccountId String
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id      String   @id @default(cuid())
  token   String   @unique
  expires DateTime

  @@unique([id, token])
}

model Product {
  id               String   @id @default(cuid())
  name             String
  description      String
  longDescription  String
  price            Float
  salePrice        Float?
  rating           Float    @default(0)
  reviewCount      Int      @default(0)
  category         String
  images           String // Comma-separated URLs
  tags             String   // Comma-separated tags
  quantity         Int?
  deliveryTime     String
  brand            String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  OrderItem        OrderItem[]
}

model Order {
  id              String      @id @default(cuid())
  userId          String
  user            User        @relation(fields: [userId], references: [id])
  items           OrderItem[]
  total           Float
  status          String      @default("Processing")
  shippingAddress String
  transactionId   String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
}
